(xor
 (seq
  (seq
   (seq
    (seq
     (seq
      (seq
       (seq
        (seq
         (call %init_peer_id% ("getDataSrv" "-relay-") [] -relay-)
         (call %init_peer_id% ("getDataSrv" "tolerance") [] tolerance)
        )
        (call %init_peer_id% ("getDataSrv" "threshold") [] threshold)
       )
       (call %init_peer_id% ("getDataSrv" "node") [] node)
      )
      (call %init_peer_id% ("getDataSrv" "oracle_service_id") [] oracle_service_id)
     )
     (call -relay- ("op" "noop") [])
    )
    (xor
     (seq
      (seq
       (seq
        (call node ("op" "string_to_b58") [node] k)
        (call node ("kad" "neighborhood") [k [] []] nodes)
       )
       (fold nodes n
        (seq
         (xor
          (call n ("peer" "timestamp_ms") [] $timestamps)
          (seq
           (seq
            (call -relay- ("op" "noop") [])
            (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 1])
           )
           (call -relay- ("op" "noop") [])
          )
         )
         (next n)
        )
       )
      )
      (call node (oracle_service_id "ts_frequency") [$timestamps tolerance threshold] consensus)
     )
     (seq
      (call -relay- ("op" "noop") [])
      (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 2])
     )
    )
   )
   (call -relay- ("op" "noop") [])
  )
  (xor
   (call %init_peer_id% ("callbackSrv" "response") [consensus])
   (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 3])
  )
 )
 (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 4])
)
