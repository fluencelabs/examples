# yaml-language-server: $schema=../../../.fluence/schemas/module.yaml.json

# EXAMPLES:
# name: facade
# type: rust # use this for modules written in rust and expected to be built with marine
# maxHeapSize: "100" # 100 bytes
# # maxHeapSize: 100K # 100 kilobytes
# # maxHeapSize: 100 Ki # 100 kibibytes
# # Max size of the heap that a module can allocate in format: <number><whitespace?><specificator?>
# # where ? is an optional field and specificator is one from the following (case-insensitive):
# # K, Kb - kilobyte; Ki, KiB - kibibyte; M, Mb - megabyte; Mi, MiB - mebibyte; G, Gb - gigabyte; Gi, GiB - gibibyte;
# # Current limit is 4 GiB
# loggerEnabled: true # true, if it allows module to use the Marine SDK logger.
# loggingMask: 0 # manages the logging targets, described in here: https://doc.fluence.dev/marine-book/marine-rust-sdk/developing/logging#using-target-map
# mountedBinaries:
#   curl: /usr/bin/curl # a map of mounted binary executable files
# preopenedFiles: # a list of files and directories that this module could access with WASI
#   - ./dir
# volumes: # a map of accessible files and their aliases.
# # Aliases should be normally used in Marine module development because it's hard to know the full path to a file.
#   aliasForSomePath: ./some/path
# envs: # environment variables accessible by a particular module with standard Rust env API like this std::env::var(IPFS_ADDR_ENV_NAME).
#   # Please note that Marine adds three additional environment variables. Module environment variables could be examined with repl
#   ENV1: arg1
#   ENV2: arg2

version: 0
type: rust
name: curl_adapter
mountedBinaries:
  curl: /usr/bin/curl # a map of mounted binary executable files
loggerEnabled: true
maxHeapSize: 640K
